{"version":3,"sources":["dico.js","Key.js","Result.js","Pendu.js","App.js","serviceWorker.js","index.js"],"names":["WORDS","Key","_ref","letter","pressed","onClick","index","react_default","a","createElement","className","concat","Solution","_ref2","word","Result","won","Result_Solution","Pendu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Draw","step","ctx","refs","hangman","getContext","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","arc","Math","PI","closePath","clearCanvas","canvas","clearRect","width","height","draws","ref","Component","KEYBOARD","split","MAX_WRONG_TRIES","App","state","generateNewGameState","newGame","setState","handleKeyClick","_this$state","pressedKeys","guesses","misses","getStateKey","RegExp","test","toConsumableArray","handleKeyPress","e","key","toUpperCase","generateWord","floor","random","length","includes","document","addEventListener","removeEventListener","replace","_this2","_this$state2","displayWord","computeDisplay","gameEnd","App_Word","map","src_Key_0","App_GuessCount","src_Pendu","src_Result_0","GuessCount","Word","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f245a579.chunk.js","sourcesContent":["\r\nexport const WORDS = [\r\n'AGREMENTER', 'ALCALISER', 'ALTERNER', 'ANGUILLE', 'AOUTER', 'APPOSER', 'ARGOTISER', 'ASEPTISER', 'ASSOURDISSANT', 'ATTISER', 'AVANCER', 'BAFOUILLER', 'BANNETTE', 'BASTINGAGE', 'BENEDICITE', 'BIGLER', 'BLAGUER', 'BOMBAGISTE', 'BOUGER', 'BOYCOTT', 'BRIGUER', 'BRUSQUERIE', 'CADENCE', 'CALMER', 'CANZONES', 'CARDE', 'CASTRERAIT', 'CENTRIFUGEAIENT', 'CHANSONNONS', 'CHAUMINES', 'CHIPOTEUSE', 'CIGOGNEAUX', 'CLAQUAGES', 'COACCUSES', 'COLLEGIENNES', 'COMMUNIQUASSIEZ', 'CONCASSAS', 'CONFINEE', 'CONSEILLERAIT', 'CONTESTERENT', 'CONTROVERSAT', 'CORIACE', 'COULISSASSENT', 'CRANERAS', 'CRIMINALISAIT', 'CULMINE', 'DANTESQUES', 'DEBLATEREZ', 'DEBUDGETISER', 'DECELERAMES', 'DECLASSANT', 'DECONSIDERASSES', 'DECRUAMES', 'DEFERRERAS', 'DEFROISSES', 'DEGOURDISSIONS', 'DELABIALISASSIONS', 'DEMAILLA', 'DEMISSIONNIONS', 'DENICHER', 'DEPASSAS', 'DEPLUMEE', 'DERAIDITES', 'DESAGENCEZ', 'DESEMBOURBIONS', 'DESENSORCELEE', 'DESINFECTERAIENT', 'DESSERRAGE', 'DETERMINERENT', 'DEVENAIT', 'DIAPASONS', 'DISACCHARIDES', 'DISSOLUTIFS', 'DOMICILIEZ', 'DROGUAS', 'EBOURGEONNERAI', 'ECHAULERAIS', 'ECOUTERAS', 'EFFEMINASSENT', 'EJECTIEZ', 'EMBALLAMES', 'EMBRAQUERIEZ', 'EMMERDAIS', 'EMPERCHAI', 'ENCABANIEZ', 'ENCLOUA', 'ENERVER', 'ENGLUAS', 'ENLEVEMENT', 'ENSACHAGE', 'ENTRACCUSES', 'ENVIRONNATES', 'EPINCASSIONS', 'EQUIPOTENTIELS', 'ESPEREES', 'ETABLISSENT', 'ETOURDERIES', 'EVOCATEURS', 'EXHAUSSERAIENT', 'EXSUDERAI', 'FAINEANTAIS', 'FAVORISER', 'FESTOYASSIONS', 'FINIMES', 'FLIRT', 'FORCIONS', 'FOURMILLASSES', 'FRETILLEMENT', 'FUIRA', 'GALVANISA', 'GAZASSIEZ', 'GIBOIERONT', 'GNOUS', 'GRACIEREZ', 'GRENOUILLAGES', 'GROUILLOTS', 'HADDOCK', 'HEBEPHRENIES', 'HISSAIT', 'HUCHERAIENT', 'IDEALISEES', 'IMPACTASSE', 'INAPAISEE', 'INDEMNITAIRE', 'INFIRMONS', 'INSCULPA', 'INTENTERA', 'INTIMIDIEZ', 'IRREALITES', 'JAUGEASSIONS', 'JURERONS', 'LAMBINATES', 'LECHASSIONS', 'LICITASSE', 'LITORNES', 'LUBRIQUES', 'MADEFIERENT', 'MAMMALOGIES', 'MARCESCENTS', 'MASCULINISAIENT', 'MECHAIT', 'MENERIONS', 'METREURS', 'MINIUM', 'MOITAT', 'MORDORAT', 'MOUTONNERAI', 'MUTILER', 'NEES', 'NOIRCISSEURS', 'OBJECTIVERA', 'OESOPHAGITES', 'OPPRESSERONT', 'OTERENT', 'PAGEOTE', 'PAMOISONS', 'PARANGON', 'PARRAINES', 'PATRICLANS', 'PELOTASSIEZ', 'PERICLITENT', 'PESTIFERAIT', 'PHTISIQUE', 'PINDARISAI', 'PLANER', 'PLUVIOSITES', 'POLYTRAUMATISEE', 'POSTNATALES', 'PRECEDASSENT', 'PRENANTE', 'PRIIEZ', 'PROLONGERENT', 'PROVIGNES', 'PYROPHORES', 'RABIOTERAI', 'RADIOTELEGRAPHIERONT', 'RALLUMASSES', 'RAPPAREILLERENT', 'RAUGMENTATES', 'REAPPRENDRAIS', 'RECASONS', 'RECOLTAI', 'RECRACHIEZ', 'REDIRENT', 'REFERES', 'REGISTRERONT', 'REINSTALLATION', 'REMAILLERAIS', 'REMONTRANCES', 'RENDORMISSIONS', 'RENTROUVRU', 'REPERCUTERONT', 'REPUBLIQUES', 'RESSAUTEREZ', 'RETENTIRIEZ', 'REUSSIE', 'REVOQUERAIS', 'RISSIEZ', 'ROSATRE', 'RUILE', 'SAILLIRAIT', 'SARMENTERIONS', 'SCHEIDASSIONS', 'SECURISEREZ', 'SERINIEZ', 'SILICONERIONS', 'SOLARISE', 'SOUCIAMES', 'SOVIETISEE', 'STARISERAI', 'STRUCTURENT', 'SUCREES', 'SUPPURAT', 'SURHUMAINES', 'SUSCITANT', 'TACHISTOSCOPE', 'TARATATA', 'TELEGA', 'TERRIFIANTS', 'TIMONERIES', 'TOPOGRAPHIE', 'TOURNOIERONT', 'TRANSFIGURERAIS', 'TRAVERS', 'TRIGEMINEES', 'TROUBLEAU', 'TYMPANISAIS', 'VACUOLISATES', 'VASSALES', 'VERJUTIEZ', 'VIGILE', 'VIVIFIATES', 'VULCANISERIONS', 'ZOZOTERAIS', 'ZOZOTIEZ', 'ZUTISTES', 'ZYGOMORPHE', 'ZYMOTIQUES', 'ZYTHON', 'ZYTHUM']","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Key.css'\r\n\r\n/**\r\n * Key\r\n */\r\nconst Key = ({ letter, pressed, index, onClick }) => (\r\n  <div className={`key ${pressed}`} onClick={() => onClick(letter)}>\r\n    <span className=\"symbol\">\r\n      {letter}\r\n    </span>\r\n  </div>\r\n)\r\n\r\nKey.propTypes = {\r\n  letter: PropTypes.string.isRequired,\r\n  pressed: PropTypes.oneOf([\r\n    'used',\r\n    'unused'\r\n  ]).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Key\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types' \r\n\r\nimport './Result.css'\r\n\r\n/**\r\n * Result, play again button\r\n */\r\nconst Result = ({ word, won, onClick }) => (\r\n  <div className=\"result-wrap\">\r\n    <div className={`result ${won}`}>{won ? \"GAGNÉ\" : \"PERDU\"}</div>\r\n    { ! won && <Solution word={word} /> }\r\n    <div className=\"play-again\">\r\n      <button onClick={onClick}>Rejouer ?</button>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst Solution = ({ word }) => (\r\n   <p className=\"solution\">\r\n      Il fallait trouver <span className=\"word\">{word}</span>\r\n   </p>\r\n)\r\n\r\nResult.propTypes = {\r\n   won: PropTypes.bool.isRequired,\r\n   onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nSolution.propTypes = {\r\n   word: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Result","import React, { Component } from 'react'\r\n\r\nclass Pendu extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.draws = [\r\n      'gallows', \r\n      'head', \r\n      'body', \r\n      'rightHarm', \r\n      'leftHarm',\r\n      'rightLeg',\r\n      'leftLeg',\r\n      'rightFoot',\r\n      'leftFoot',\r\n    ]\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if ( this.props.step === 0 ) {\r\n      this.clearCanvas()\r\n    }\r\n    else {\r\n      this.Draw(this.draws[this.props.step - 1])\r\n    }\r\n  }\r\n\r\n  Draw = (step) => {\r\n    const ctx = this.refs.hangman.getContext(\"2d\");\r\n    switch (step) {\r\n      case 'gallows' :\r\n        ctx.strokeStyle = '#444';\r\n        ctx.lineWidth = 10; \r\n        ctx.beginPath();\r\n        ctx.moveTo(175, 225);\r\n        ctx.lineTo(5, 225);\r\n        ctx.moveTo(40, 225);\r\n        ctx.lineTo(25, 5);\r\n        ctx.lineTo(100, 5);\r\n        ctx.lineTo(100, 25);\r\n        ctx.stroke();\r\n        break;\r\n\r\n      case 'head':\r\n        ctx.lineWidth = 5;\r\n        ctx.beginPath();\r\n        ctx.arc(100, 50, 25, 0, Math.PI*2, true);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        break;\r\n\r\n      case 'body':\r\n        ctx.beginPath();\r\n        ctx.moveTo(100, 75);\r\n        ctx.lineTo(100, 140);\r\n        ctx.stroke();\r\n        break;\r\n\r\n      case 'rightHarm':\r\n        ctx.beginPath();\r\n        ctx.moveTo(100, 85);\r\n        ctx.lineTo(60, 100);\r\n        ctx.stroke();\r\n        break;\r\n\r\n      case 'leftHarm':\r\n        ctx.beginPath();\r\n        ctx.moveTo(100, 85);\r\n        ctx.lineTo(140, 100);\r\n        ctx.stroke();\r\n        break;\r\n\r\n      case 'rightLeg':\r\n        ctx.beginPath();\r\n        ctx.moveTo(100, 140);\r\n        ctx.lineTo(80, 190);\r\n        ctx.stroke();\r\n        break;\r\n\r\n      case 'rightFoot':\r\n        ctx.beginPath();\r\n        ctx.moveTo(82, 190);\r\n        ctx.lineTo(70, 185);\r\n        ctx.stroke();\r\n        break;\r\n\r\n      case 'leftLeg':\r\n        ctx.beginPath();\r\n        ctx.moveTo(100, 140);\r\n        ctx.lineTo(125, 190);\r\n        ctx.stroke();\r\n        break;\r\n\r\n      case 'leftFoot':\r\n        ctx.beginPath();\r\n        ctx.moveTo(122, 190);\r\n        ctx.lineTo(135, 185);\r\n        ctx.stroke();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    } \r\n  }   \r\n\r\n  clearCanvas = () => {\r\n    const canvas = this.refs.hangman\r\n    const ctx = canvas.getContext(\"2d\")\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <canvas ref=\"hangman\" width={200} height={250}></canvas>\r\n    )\r\n  }\r\n\r\n} \r\n\r\nexport default Pendu","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\n\nimport './App.css'\nimport { WORDS } from './dico.js'\nimport Key from './Key.js'\nimport Result from './Result.js'\nimport Pendu from './Pendu.js'\n\nconst HIDDEN_SYMBOL = '_'\nconst KEYBOARD = 'AZERTYUIOPQSDFGHJKLMWXCVBN'.split('')\nconst MAX_WRONG_TRIES = 9\n\nclass App extends Component {\n\n  state = this.generateNewGameState()\n\n  // Arrow fx for binding\n  newGame = () => {\n    this.setState(this.generateNewGameState())\n  }\n\n  generateNewGameState() {\n    return {\n      word: this.generateWord(),\n      guesses: 0,\n      misses: 0,\n      pressedKeys: [],\n    }\n  }\n \n  generateWord() {\n    return WORDS[Math.floor(Math.random()*WORDS.length)]\n  }\n\n  getStateKey(letter) {\n    return this.state.pressedKeys.includes(letter) ? 'used' : 'unused'\n  }\n\n  // Arrow fx for binding\n  handleKeyClick = letter => {\n    let { pressedKeys, guesses, misses, word } = this.state\n\n    // Checks if letter has been used\n    if (this.getStateKey(letter) === \"used\" || misses === MAX_WRONG_TRIES ) return\n\n    guesses++\n\n    const regex = new RegExp(letter)\n    misses = regex.test(word) ? misses : misses + 1\n\n    // pressedKeys.push(letter)\n    pressedKeys = [...pressedKeys, letter]\n    this.setState({ guesses: guesses, pressedKeys: pressedKeys, misses: misses })\n    \n  } \n\n  /**\n   * KeyPress\n   */\n  handleKeyPress = e => {\n    const letter = e.key.toUpperCase()\n    if (! /[A-Z]/.test(letter)) return\n    this.handleKeyClick(letter)\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keypress\", this.handleKeyPress)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keypress\", this.handleKeyPress)\n  }\n\n  \n  /**\n   * Reveals the searches word\n   */\n  computeDisplay( word, pressedKeys ) {\n    return word.replace( /\\w/g, (letter) => (pressedKeys.includes(letter) ? letter : HIDDEN_SYMBOL))\n  }\n\n  render() {\n    const { word, guesses, misses, pressedKeys } = this.state\n    const displayWord = this.computeDisplay( word, pressedKeys )\n    const won = word === displayWord\n    const gameEnd = won || misses === MAX_WRONG_TRIES\n    return (\n      <div className=\"App\">\n        <h1>Jeu du Pendu</h1>\n        <Word word={ displayWord }/>\n        <div className=\"keyboard\">\n          { KEYBOARD.map((letter, index) => (\n            <Key\n              letter={letter}\n              index={index}\n              pressed={this.getStateKey(letter)}\n              key={index}\n              onClick={this.handleKeyClick}              \n            />\n          )) }\n        </div>\n        <GuessCount\n          guesses={guesses}\n          misses={misses}\n        />\n        <Pendu step={misses} />\n        { gameEnd && \n          <Result \n            won={won}\n            word={word}\n            onClick={this.newGame} \n          /> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n/**\n * Guesses count\n */\nconst GuessCount = ({ guesses, misses }) => ( \n  <div className=\"guessesWrap\">\n    <div className=\"guesses\">\n      <span>Nombre d'essais&nbsp;:</span> \n      <span className=\"guess-count\">{guesses}</span>\n    </div>\n    <div className=\"guesses misses\">\n      <span>Nombre d'essais manqués&nbsp;:</span>\n      <span className=\"guess-count\">{misses}</span>\n    </div>\n  </div>\n)\n\n\nGuessCount.propTypes = {\n  guesses: PropTypes.number.isRequired,\n}\n\n/**\n * Word\n */\nconst Word = ({ word }) => (<div className=\"word\">{word}</div>)\nWord.propTypes = {\n  word: PropTypes.string.isRequired,\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}